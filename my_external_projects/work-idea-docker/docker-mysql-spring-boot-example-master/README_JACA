> docker run --name mysql-standalone -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=test -e MYSQL_USER=sa -e MYSQL_PASSWORD=password -d mysql:5.6

In the Spring Boot Application, use the same container name of the mysql instance in the application.properties:
spring.datasource.url = jdbc:mysql://mysql-standalone:3306/test

Create a Dockerfile for creating a docker image from the Spring Boot Application:
 FROM openjdk:8
 ADD target/users-mysql.jar users-mysql.jar
 EXPOSE 8086
 ENTRYPOINT ["java", "-jar", "users-mysql.jar"]

Using the Dockerfile create the Docker image. From the directory of Dockerfile -:
 > docker build . -t users-mysql

Run the Docker image (users-mysql) created in #4.
 > winpty docker run -p 8086:8086 -it users-mysql


Useful Docker commands:
-------------------------
docker images
docker container ls
docker logs <container_name>
docker container rm <container_name
docker image rm <image_name

====================== JACA ===========================

dbase=test-docker
username/password=root/root

I added:
@GeneratedValue(strategy = GenerationType.AUTO) in Users entity bean.

http://localhost:8086/all/create
Each refresh generates new record:
[{"id":1,"name":"Sam","salary":3400,"teamName":"Development"},
{"id":2,"name":"Sam","salary":3400,"teamName":"Development"},
{"id":3,"name":"Sam","salary":3400,"teamName":"Development"},
{"id":4,"name":"Sam","salary":3400,"teamName":"Development"}]

